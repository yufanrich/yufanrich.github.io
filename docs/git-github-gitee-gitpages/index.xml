<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>yufanrich的个人博客</title><link>https://yufanrich.github.io/docs/git-github-gitee-gitpages/</link><description>Recent content on yufanrich的个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh</language><atom:link href="https://yufanrich.github.io/docs/git-github-gitee-gitpages/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_github_gitpages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_github_gitpages/</guid><description>搭建自己的博客 # 1 背景 # 之前也用到过博客园、开源中国、csdn等常用博客网站,但是总是感觉很分散。 再加上想重新梳理一下自己的知识体系,就萌生了重新整理一遍博客内容的想法。 这个时候,想到自己经常看到的一些有些的博客，好像有很多都是个人网站。 于是，就准备动手搭建自己的博客网站了。 本文:主要采用Hugo+GitHub+GitPages. (ps:GetHub可以替换为Gitee) (ps:Hugo也有同类替代品,如Hexo、Jekyll(GitHub默认首选)) 其实:后面用的多了,一个项目可以同时提交到Gitee和GitHub后,完全可以同时部署在Gitee和GitHub. (ps:一个项目如何同时提交到Gitee和GitHub? vx公众号:小猿code) 2 实战 # 2.1 Hugo # 2.1.1 hugo安装 # 官网参考:https://gohugo.io/installation/macos/ macOs : brew install hugo 2.1.2 hugo快速入门 # # 创建一个新的网站（本地） hugo new site quickstart &amp;amp;&amp;amp; cd quickstart # 拉取并设置主题 git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke echo theme = \&amp;#34;ananke\&amp;#34; &amp;gt;&amp;gt; config.toml # 创建一篇新文章 hugo new posts/my-first-post.md # 构建静态网站文件，并启动 HTTP 服务 hugo server -D 执行完上述操作，就可以通过浏览器访问 http://localhost:1313/ 可以看到自己刚创建的网站与第一篇文章 2.</description></item><item><title/><link>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_github_gitpages_advance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_github_gitpages_advance/</guid><description>美化自己的博客 # 1 背景 # 上一篇内容,我们学习了如何搭建一个自动化部署的博客网站。 我们继续来从以下几个方面来优化我们的个人博客网站。 vx search :小猿code 2 实战 # 2.1 选择一个自己喜欢的主题 # # 访问主题官网 https://themes.gohugo.io/ # 选中一个喜欢的主题,后点击跳转过去 https://github.com/alex-shpak/hugo-book # 学习官网如何设置此主题 git submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book theme = &amp;#39;hugo-book&amp;#39; 2.2 文章设置层级结构 # 模仿层级结构进行编辑 content/menu/index.md with the content: 启用菜单 hugo.toml [params] BookMenuBundle = &amp;#39;/menu&amp;#39; 2.3 md文档引入图片 # 针对此hugo-book的主题,默认就是在static即可 ![](logo.jpg) 2.4 设置网站联系人及介绍 # 在footer.html设置公众号联系人 一般主题都会预留一个公共的底部编辑文件,供自由填充 &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;安利一波:&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;欢迎朋友们点赞 👍、收藏 💗、关注 💡、分享 😊 在看 👀,任意一连支持一下&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;欢迎朋友们关注我的公众号:&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;公众号：小猿code&amp;lt;br/&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;扫码关注&amp;lt;br/&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&amp;#34;{{ &amp;#34;gzh.</description></item><item><title/><link>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_github_summary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_github_summary/</guid><description>总计个人建站所用到的工具类 # 背景 # 在前面三篇文章中,我们分别从
小白建站
美化站点(美化排版)
美化图片排版(搭建图床服务器)
三个方面分别对我们的内容进行了优化,并实现了一份内容编写, 同时支持个人网站和公众号文章双部署。 下面我们对所用到的工具进行一个汇总和总结,让我们更熟练的使用各个工具
1 搭建个人网站和公众号所用工具汇总 # 1.1 流程图 # 1.2 工具介绍 # Hugo:用于建立网站(纯html网站,我们使用md编写,会帮我们转换到html)
GitHub+Gitee 1）存储源代码 2）借助Git Actions 实现代码提交后,进行网站自动部署 3）借助Git Pages 实战网站部署,以及免费使用其自身提供的二级域名 4）作为免费的图床服务器
PicGo:图片上传工具，支持自动上传到多个图床
DrawIo:绘图工具
Markdown:博客内容编写
微信公众号Markdown编辑器:实现md文档转换公众号文章央视排版的能力
借助以上工具，我们实现了本地md文档的编写,同时支持个人网站和公众号文章双部署。 接下来，就是愉快的创作时间了。</description></item><item><title/><link>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_markdown_picgo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://yufanrich.github.io/docs/git-github-gitee-gitpages/hugo_markdown_picgo/</guid><description>快速排版自己博客的图片 # 背景 # 在前两篇文章中,我们搭建了自己的博客,并美化了自己的博客。 但是博客更重要的是内容,一般我们使用markdown来编写博客内容。 但是markdown对于图片处理的不是很友好,每次发布公众号时都需要 替换本地图片到网络图片。如果能自动替换就好了&amp;hellip;&amp;hellip;
1 选择图床服务器 # 1.1 备选服务器及理由 # 一般可以选七牛云、腾讯云、有道云笔记等,本着简单至上的原则,我们选择程序员 都熟悉的gitee和github。
1.2 搭建github图床 # 新建仓库 新建令牌 手动上传
借助github网页端上传或者git客户端操作 1.3 搭建gitee图床 # 新建仓库 新建令牌 手动上传
借助gitee网页端上传或者git客户端操作 以上,虽然我们搭建了一个简单的图床,但是每次需要手动截图，保存之后，上传图片, 且需要手动 获取图片最终的网路地址,比较费事。 有没有办法截图之后，自动上传到图床，且自动返回最终的网路地址呢？
2 PicGo安装 （自动上传到图床服务器:不用手动上传） # 2.1 简介 # 官网地址:https://github.com/Molunerfinn/PicGo
2.2 安装 npm 以及 gitee 插件 # brew install node npm在Node v0.6.x版本之后，内建于Node系统.安装node就自带npm node -v npm -v 2.3 gitee插件进行安装 # 2.4 gitee 及github配置 # gitee 和 github配置大同小异,github配置路径时是imgs/,而gitee是/imgs 2.5 pigco上传日志查看 # 2.</description></item></channel></rss>